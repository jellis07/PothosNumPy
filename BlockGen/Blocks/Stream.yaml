unique:
        name: Unique
        class: OneToOneBlock
        categories: ["/NumPy/Stream"]
        blockType: [all]
        kwargs: [useDType=False, callPostBuffer=True]

copy_sign:
        name: CopySign
        niceName: Copy Sign
        class: TwoToOneBlock
        categories: ["/NumPy/Stream"]
        blockType: [int, float, complex]

positive:
        name: Positive
        class: OneToOneBlock
        categories: ["/NumPy/Stream"]
        blockType: [int, float, complex]

trim_zeros:
        copy: unique
        name: TrimZeros
        niceName: Trim Zeros

negative:
        copy: positive
        name: Negative

ravel:
        copy: unique
        name: Ravel
        class: NToOneBlock

intersect1d:
        copy: unique
        name: Intersect1D
        niceName: Set Intersection
        class: TwoToOneBlock

setdiff1d:
        copy: unique
        name: SetDiff1D
        niceName: Set Difference
        class: TwoToOneBlock

setxor1d:
        copy: unique
        name: SetXor1D
        niceName: Set XOR
        class: TwoToOneBlock

union1d:
        copy: unique
        name: Union1D
        niceName: Set Union
        class: TwoToOneBlock

sort:
        copy: unique
        name: Sort
        alias: [msort]

sort_complex:
        copy: unique
        name: SortComplex
        niceName: "Sort Complex"
        blockType: [complex]

# TODO: better categories if needed, move to own files if needed

ptp:
        name: PTP
        nicename: Peak-to-Peak
        categories: ["/NumPy/Stream"]
        class: ForwardAndPostLabelBlock
        blockType: [all]
        label: "PTP"

mean:
        copy: ptp
        name: Mean
        label: "MEAN"

std:
        copy: ptp
        name: Std
        niceName: Standard Deviation
        label: "STD"

var:
        copy: ptp
        name: Var
        niceName: Variance
        label: "VAR"

nanmean:
        copy: ptp
        name: NaNMean
        niceName: Mean (ignores NaN)
        label: "MEAN"

nanstd:
        copy: ptp
        name: NaNStd
        niceName: Standard Deviation (ignores NaN)
        label: "STD"

nanvar:
        copy: ptp
        name: NaNVar
        niceName: Variance (ignores NaN)
        label: "VAR"

nanmax:
        copy: ptp
        name: NaNMax
        niceName: Max (ignores NaN)
        findIndexFunc: numpy.nanargmax
        label: "MAX"

nanmin:
        copy: ptp
        name: NaNMin
        niceName: Min (ignores NaN)
        findIndexFunc: numpy.nanargmin
        label: "MIN"

count_nonzero:
        copy: ptp
        name: CountNonZero
        niceName: Count Non-Zeros
        label: "NONZERO"
